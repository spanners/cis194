<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta name="generator" content="MediaWiki 1.19.5-1+deb7u1" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/haskellwiki/opensearch_desc.php" title="HaskellWiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://www.haskell.org/haskellwiki/api.php?action=rsd" />
<link rel="copyright" href="/haskellwiki/HaskellWiki:Copyrights" />
<link rel="alternate" type="application/atom+xml" title="HaskellWiki Atom feed" href="/haskellwiki/index.php?title=Special:RecentChanges&amp;feed=atom" />		<title>Yi - HaskellWiki</title>
		<style type="text/css" media="screen, projection">/*<![CDATA[*/
			@import "/wikistatic/skins//common/shared.css?303";
			@import "/wikistatic/skins//hawiki/main.css?303";
		/*]]>*/</style>
		<link rel="stylesheet" type="text/css" media="print" href="/wikistatic/skins//common/commonPrint.css?303" />
		<!--[if lt IE 5.5000]><style type="text/css">@import "/wikistatic/skins//hawiki/IE50Fixes.css?303";</style><![endif]-->
		<!--[if IE 5.5000]><style type="text/css">@import "/wikistatic/skins//hawiki/IE55Fixes.css?303";</style><![endif]-->
		<!--[if IE 6]><style type="text/css">@import "/wikistatic/skins//hawiki/IE60Fixes.css?303";</style><![endif]-->
		<!--[if IE 7]><style type="text/css">@import "/wikistatic/skins//hawiki/IE70Fixes.css?303";</style><![endif]-->
		<!--[if lte IE 7]><script type="text/javascript" src="/wikistatic/skins//hawiki/IEFixes.js?303"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
                                                <script type="text/javascript">
                        var isMSIE55 = (window.showModalDialog && window.clipboardData && window.createPopup); /*alert("test: " + isMSIE55);*/</script>

		<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Yi","wgTitle":"Yi","wgCurRevisionId":58356,"wgArticleId":1797,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Applications","FAQ"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"Yi","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script>
		<script type="text/javascript" src="/wikistatic/skins//common/wikibits.js?303"><!-- wikibits js --></script>
		<!-- Head Scripts -->
<script src="http://www.haskell.org/haskellwiki/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=hawiki&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Yi","wgTitle":"Yi","wgCurRevisionId":58356,"wgArticleId":1797,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Applications","FAQ"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"Yi","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function($){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":1,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"hawiki","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,
"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;},{},{});mw.loader.implement("user.tokens",function($){mw.user.tokens.set({"editToken":"+\\","watchToken":false});;},{},{});

/* cache key: wikidb:resourceloader:filter:minify-js:7:befcdb5e3b24ff89f900613de9ed4ea3 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script>	</head>
<body class="mediawiki ltr ns-0 ns-subject page-Yi skin-hawiki">
   <div id="topbar" class="noprint">
	<div class="portlet noprint" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul><li><a class="homebutton" href="/haskellwiki/Haskell">Home</a></li>
				<li id="pt-login"><a href="/haskellwiki/index.php?title=Special:UserLogin&amp;returnto=Yi">Log in</a></li>
			</ul>
		</div>
	</div>
        	  <div id="p-search">
	    <div id="searchBody" class="pBody">
	       <form action="/haskellwiki/index.php" id="searchform"><div>
	          <input type='hidden' name="title" value="Special:Search"/>
	          <input id="searchInput" name="search" type="text" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" />

	         </div></form>
	    </div>
	  </div>
   </div>
	<div id="globalWrapper">
	<div class="portlet" id="p-logo">
		<a style="background-image: url(/wikistatic/haskellwiki_logo.png);" href="/haskellwiki/Haskell"></a>
	</div>
	<div id="column-content">
        <div id="notice-area" class="noprint">
        <!-- ?php $this->data['sitenotice'] = 'This is a test instance.  Do not edit, your changes will be lost.'; ? -->
			        </div>
        <div id="content-wrapper">
	<div id="p-cactions" class="portlet noprint">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/haskellwiki/Yi">Page</a></li>
				 <li id="ca-talk" class="new"><a href="/haskellwiki/index.php?title=Talk:Yi&amp;action=edit&amp;redlink=1">Discussion</a></li>
				 <li id="ca-viewsource"><a href="/haskellwiki/index.php?title=Yi&amp;action=edit">View source</a></li>
				 <li id="ca-history"><a href="/haskellwiki/index.php?title=Yi&amp;action=history">History</a></li>			</ul>
		</div>
	</div>
                        <div id="content">
		<a name="top" id="top"></a>
                        <h1 id="firstHeading" class="firstHeading">Yi</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From HaskellWiki</h3>
			<div id="contentSub"></div>
			<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p><a href="/haskellwiki/File:Yi-logo.png" class="image"><img alt="Yi-logo.png" src="/wikiupload/7/72/Yi-logo.png" width="64" height="64" /></a>
</p>
<table id="toc" class="toc"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#About"><span class="tocnumber">1</span> <span class="toctext">About</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Get_Yi"><span class="tocnumber">2</span> <span class="toctext">Get Yi</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="#From_Hackage"><span class="tocnumber">2.1</span> <span class="toctext">From Hackage</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#From_GitHub"><span class="tocnumber">2.2</span> <span class="toctext">From GitHub</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Platform_Support"><span class="tocnumber">2.3</span> <span class="toctext">Platform Support</span></a>
<ul>
<li class="toclevel-3 tocsection-6"><a href="#GNU.2FLinux"><span class="tocnumber">2.3.1</span> <span class="toctext">GNU/Linux</span></a></li>
<li class="toclevel-3 tocsection-7"><a href="#Mac_OS_X"><span class="tocnumber">2.3.2</span> <span class="toctext">Mac OS X</span></a></li>
<li class="toclevel-3 tocsection-8"><a href="#Windows"><span class="tocnumber">2.3.3</span> <span class="toctext">Windows</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="#Screenshots_.280.3.29"><span class="tocnumber">3</span> <span class="toctext">Screenshots (0.3)</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#Bugs"><span class="tocnumber">4</span> <span class="toctext">Bugs</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#FAQs"><span class="tocnumber">5</span> <span class="toctext">FAQs</span></a>
<ul>
<li class="toclevel-2"><a href="#Installation"><span class="tocnumber">5.1</span> <span class="toctext">Installation</span></a></li>
<li class="toclevel-2"><a href="#Default_key_bindings"><span class="tocnumber">5.2</span> <span class="toctext">Default key bindings</span></a>
<ul>
<li class="toclevel-3"><a href="#CUA_key_bindings"><span class="tocnumber">5.2.1</span> <span class="toctext">CUA key bindings</span></a>
<ul>
<li class="toclevel-4"><a href="#File_operations"><span class="tocnumber">5.2.1.1</span> <span class="toctext">File operations</span></a></li>
<li class="toclevel-4"><a href="#Cursor.2Fselection_movement"><span class="tocnumber">5.2.1.2</span> <span class="toctext">Cursor/selection movement</span></a></li>
<li class="toclevel-4"><a href="#Miscellaneous_operations"><span class="tocnumber">5.2.1.3</span> <span class="toctext">Miscellaneous operations</span></a></li>
</ul>
</li>
<li class="toclevel-3"><a href="#Vim_key_bindings"><span class="tocnumber">5.2.2</span> <span class="toctext">Vim key bindings</span></a></li>
<li class="toclevel-3"><a href="#Emacs_key_bindings"><span class="tocnumber">5.2.3</span> <span class="toctext">Emacs key bindings</span></a>
<ul>
<li class="toclevel-4"><a href="#Basics"><span class="tocnumber">5.2.3.1</span> <span class="toctext">Basics</span></a></li>
<li class="toclevel-4"><a href="#Basic_movement"><span class="tocnumber">5.2.3.2</span> <span class="toctext">Basic movement</span></a></li>
<li class="toclevel-4"><a href="#Editing"><span class="tocnumber">5.2.3.3</span> <span class="toctext">Editing</span></a></li>
<li class="toclevel-4"><a href="#Important"><span class="tocnumber">5.2.3.4</span> <span class="toctext">Important</span></a></li>
<li class="toclevel-4"><a href="#Search.2FReplace"><span class="tocnumber">5.2.3.5</span> <span class="toctext">Search/Replace</span></a></li>
<li class="toclevel-4"><a href="#Window-Commands"><span class="tocnumber">5.2.3.6</span> <span class="toctext">Window-Commands</span></a></li>
<li class="toclevel-4"><a href="#DIRectory_EDitor_.28dired.29"><span class="tocnumber">5.2.3.7</span> <span class="toctext">DIRectory EDitor (dired)</span></a></li>
<li class="toclevel-4"><a href="#Programming"><span class="tocnumber">5.2.3.8</span> <span class="toctext">Programming</span></a></li>
<li class="toclevel-4"><a href="#C.2C_C.2B.2B_and_Java_Modes"><span class="tocnumber">5.2.3.9</span> <span class="toctext">C, C++ and Java Modes</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-2"><a href="#Development"><span class="tocnumber">5.3</span> <span class="toctext">Development</span></a></li>
<li class="toclevel-2"><a href="#Configuration"><span class="tocnumber">5.4</span> <span class="toctext">Configuration</span></a>
<ul>
<li class="toclevel-3"><a href="#How_to_Configure_Yi"><span class="tocnumber">5.4.1</span> <span class="toctext">How to Configure Yi</span></a></li>
</ul>
</li>
<li class="toclevel-2"><a href="#Usage"><span class="tocnumber">5.5</span> <span class="toctext">Usage</span></a>
<ul>
<li class="toclevel-3"><a href="#GError_on_startup"><span class="tocnumber">5.5.1</span> <span class="toctext">GError on startup</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="#Contribute"><span class="tocnumber">6</span> <span class="toctext">Contribute</span></a>
<ul>
<li class="toclevel-2 tocsection-13"><a href="#Write_access_policy"><span class="tocnumber">6.1</span> <span class="toctext">Write access policy</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-14"><a href="#Yi_Ideas"><span class="tocnumber">7</span> <span class="toctext">Yi Ideas</span></a>
<ul>
<li class="toclevel-2 tocsection-15"><a href="#Borrowing_from_other_editors"><span class="tocnumber">7.1</span> <span class="toctext">Borrowing from other editors</span></a>
<ul>
<li class="toclevel-3 tocsection-16"><a href="#Emacs"><span class="tocnumber">7.1.1</span> <span class="toctext">Emacs</span></a>
<ul>
<li class="toclevel-4 tocsection-17"><a href="#Emacs_goodness"><span class="tocnumber">7.1.1.1</span> <span class="toctext">Emacs goodness</span></a></li>
<li class="toclevel-4 tocsection-18"><a href="#Emacs_badness"><span class="tocnumber">7.1.1.2</span> <span class="toctext">Emacs badness</span></a></li>
<li class="toclevel-4 tocsection-19"><a href="#Emacs_maybeness_.28.3F.29"><span class="tocnumber">7.1.1.3</span> <span class="toctext">Emacs maybeness (?)</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-20"><a href="#Vim.3F"><span class="tocnumber">7.1.2</span> <span class="toctext">Vim?</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-21"><a href="#Ideas"><span class="tocnumber">7.2</span> <span class="toctext">Ideas</span></a></li>
<li class="toclevel-2 tocsection-22"><a href="#Implementation"><span class="tocnumber">7.3</span> <span class="toctext">Implementation</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-23"><a href="#Trivia"><span class="tocnumber">8</span> <span class="toctext">Trivia</span></a></li>
<li class="toclevel-1 tocsection-24"><a href="#External_links"><span class="tocnumber">9</span> <span class="toctext">External links</span></a></li>
</ul>
</td></tr></table>
<h2> <span class="mw-headline" id="About">1  About </span></h2>
<p>Yi is a text editor written in Haskell and extensible in Haskell. The goal of Yi is
to provide a flexible, powerful and correct editor core
scriptable in Haskell.
</p><p>Features:
</p>
<ul><li> A purely functional editor core;
</li><li> Keybindings written as parsers of the input;
</li><li> Emacs, Vim and Cua (subset) emulations provided by default;
</li><li> Vty and GTK+ w/ Pango(via Gtk2Hs) frontends.
</li></ul>
<p>The long term goal of the project is to make Yi the editor of choice for Haskell hackers.
</p><p>The main short term goal is to maximize Yi's Fun Factor. This includes:
</p>
<ul><li> Improve hackability (and therefore architecture)
</li><li> Add cool features
</li></ul>
<h2> <span class="mw-headline" id="Get_Yi">2  Get Yi </span></h2>
<h3> <span class="mw-headline" id="From_Hackage">2.1  From Hackage </span></h3>
<p>Yi depends on the <a rel="nofollow" class="external text" href="http://haskell.org/platform">Haskell Platform</a> which must be installed. Many Haskellers haven't installed this explicitly, as they have already installed most of the utilities it contains; to be sure you have everything that is needed, it is recommended that you explicitly install the Platform.
</p><p>Following that, simply:
</p>
<pre>$ cabal update
$ cabal install yi
</pre>
<p>More information about the package is available at <a rel="nofollow" class="external text" href="http://hackage.haskell.org/package/yi">Yi on Hackage</a>.
</p>
<h3> <span class="mw-headline" id="From_GitHub">2.2  From GitHub </span></h3>
<p>See the GitHub <a rel="nofollow" class="external text" href="https://github.com/yi-editor/yi">repository</a>. Or get it with git:
</p>
<pre>$ git clone <a rel="nofollow" class="external free" href="git://github.com/yi-editor/yi.git">git://github.com/yi-editor/yi.git</a>
</pre>
<p>We try to keep the repository in a clean and buildable state, so it's "testable" for new users. Yi usually only works on the latest GHC release.
</p><p><i>Note that the old yi-contrib repository is now just a subdirectory of the yi repo.</i>
</p>
<h3> <span class="mw-headline" id="Platform_Support">2.3  Platform Support </span></h3>
<h4> <span class="mw-headline" id="GNU.2FLinux">2.3.1  GNU/Linux </span></h4>
<p>Some GNU/Linux distros have pre-built Yi packages.  For Debian/Ubuntu packages, see <a rel="nofollow" class="external text" href="https://groups.google.com/forum/?fromgroups=#!topic/yi-devel/XSzWSv1HBmQ">this post in the yi-devel mailing list</a>.
</p>
<h4> <span class="mw-headline" id="Mac_OS_X">2.3.2  Mac OS X </span></h4>
<p>The easiest way to get Yi for Mac OS X is currently no different from the above. There is also a Yi release in MacPorts, but it might be very old, deprecated one. Please use the Hackage version instead.
</p>
<h4> <span class="mw-headline" id="Windows">2.3.3  Windows </span></h4>
<p>The current version of Yi on Hackage (0.6.6.0) can be built on Windows.
</p><p>First, you should install the current version of <a rel="nofollow" class="external text" href="http://www.haskell.org/platform/windows.html">Haskell Platform for Windows</a>.  The version 2012.4.0.0 is known to work with Yi 0.6.6.0.  Make sure that your Haskell compiler and tools are on your PATH.
</p><p>Next, you should install <a rel="nofollow" class="external text" href="http://www.gtk.org/download/win32.php">GTK+ for Windows</a>.  You have to use "All-in-one bundles", not individual packages.  Download and unpack the archive, then again make sure that GTK+ utilities are on your PATH.
</p><p>Now, you can invoke cabal-Install from the command prompt.
</p>
<pre>$ cabal update
$ cabal install gtk2hs-buildtools
$ cabal install gtk
$ cabal install yi -f-vty -fpango
</pre>
<p>Make sure that you do Configure with flag -f-vty -fpango to force enabling Pango and disabling Vty interface, since Vty is not supported in Windows.
</p>
<h2> <span class="mw-headline" id="Screenshots_.280.3.29">3  Screenshots (0.3) </span></h2>
<div class="thumb tright"><div class="thumbinner" style="width:502px;"><a href="/haskellwiki/File:Yi-20070409.png" class="image"><img alt="(thumbnail)" src="/wikiupload/thumb/0/0f/Yi-20070409.png/500px-Yi-20070409.png" width="500" height="549" class="thumbimage" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/haskellwiki/File:Yi-20070409.png" class="internal" title="Enlarge"><img src="/wikistatic/skins//common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>The GTK frontend</div></div></div>
<div class="thumb tnone"><div class="thumbinner" style="width:502px;"><a href="/haskellwiki/File:Yi-20080114-vty.png" class="image"><img alt="(thumbnail)" src="/wikiupload/thumb/b/b5/Yi-20080114-vty.png/500px-Yi-20080114-vty.png" width="500" height="400" class="thumbimage" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/haskellwiki/File:Yi-20080114-vty.png" class="internal" title="Enlarge"><img src="/wikistatic/skins//common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>The Vty frontend</div></div></div>
<h2> <span class="mw-headline" id="Bugs">4  Bugs </span></h2>
<p>Check/report bug reports here: <a rel="nofollow" class="external text" href="https://github.com/yi-editor/yi/issues">GitHub issue tracker</a>
</p>
<h2> <span class="mw-headline" id="FAQs">5  FAQs </span></h2>
<h3> <span class="mw-headline" id="Installation">5.1  Installation </span></h3>
<ul><li>How do I install Yi?
</li></ul>
<dl><dd>Get it from Hackage. Configure, compile and install Yi as you would do for any other Cabal package.  See also above-mentioned (2.3 Platform Support).
</dd></dl>
<ul><li>Setup configure fails with
</li></ul>
<pre>Setup.hs: Package yi-0.4 can't be built on this system.
</pre>
<dl><dd>It means that you have no UI package available. You need VTY or GTK2hs installed. Get them from Hackage.
</dd></dl>
<ul><li>cabal install yi fails with dependency errors, e.g.:
</li></ul>
<pre>$ cabal install yi
Resolving dependencies...
cabal.exe: dependencies conflict: ghc-6.8.3 requires bytestring ==0.9.0.1.1
however
bytestring-0.9.0.1.1 was excluded because bytestring-0.9.0.1 was selected
instead
bytestring-0.9.0.1.1 was excluded because yi-0.3 requires bytestring =0.9.0.1
</pre>
<dl><dd>Try removing all your old yi packages, and do
</dd></dl>
<pre>cabal update
</pre>
<p>before attempting to install.
</p>
<ul><li>cabal install -fghcAPI fails
</li></ul>
<dl><dd>If you want GHC API special capabilities, you have to download, configure, build and copy separately:
</dd></dl>
<pre>cd yi
cabal configure -fghcAPI
cabal build
cabal copy
</pre>
<ul><li> Compilation fails with a message about <tt>alex</tt> not being available?
</li></ul>
<dl><dd> Currently, Cabal doesn't track programs, just libraries, so it won't warn you if you are missing Alex (as many people are). The solution here is to just <tt>cabal install alex</tt> first. (Yi uses Alex to generate code for parsing stuff with syntax, like Haskell source.)
</dd></dl>
<ul><li> I can't install <tt>yi-gtk</tt> or <tt>yi-vty</tt>! It wants <tt>sourceview</tt> or something.
</li></ul>
<dl><dd> As the Hackage descriptions say, yi-gtk and yi-vty are <i>only</i> for versions of older than Yi 0.3. You really should be running the latest development (GitHub) or stable (Hackage) versions of Yi, so <i>don't</i> try to install these two packages. Yi supports VTY and Gtk2hs directly in the <tt>yi</tt> package now.
</dd></dl>
<ul><li>On Mac OS X if you get an error message similar to this:
</li></ul>
<pre>yi: can't load .so/.DLL for: gthread-2.0 (dlopen(libgthread-2.0.dylib, 10): image not found)
</pre>
<dl><dd>then your dynamic library search path variable is probably not set correctly.  You can set it (in Bash) using:
</dd></dl>
<pre>export DYLD_LIBRARY_PATH=/opt/local/lib
</pre>
<dl><dd>(Adjust the specific path to your system.  You can find the right location using <tt>locate libgthread</tt>)
</dd></dl>
<ul><li>On Mac OS 10.6 (Snow Leopard) if you get the following error:
</li></ul>
<pre> Loading package cairo-0.11.1 ... &lt;command line&gt;: can't load .so/.DLL for: pixman-1 (dlopen(/opt/local/lib/libpixman-1.dylib, 9): no suitable image found.  Did find:
       /opt/local/lib/libpixman-1.dylib: mach-o, but wrong architecture)
 cabal: Error: some packages failed to install:
 yi-0.6.2.4 failed during the building phase. The exception was:
 ExitFailure 1
</pre>
<dl><dd>then the problem is that GHC currently only supports linking against i386 libraries, and your ports are compiled for x86_64. To fix, recompile your ports with the +universal variant like so:
</dd></dl>
<pre> port install installed +universal
</pre>
<ul><li> Compilation fails with errors about template-haskell or data-accessor:
</li></ul>
<p>Add constraints about which release of those libraries to use.
</p>
<pre> $ cabal install yi --constraint="data-accessor &lt; 0.2.1" --constraint="template-haskell &lt; 2.4"
</pre>
<h3> <span class="mw-headline" id="Default_key_bindings">5.2  Default key bindings </span></h3>
<h4> <span class="mw-headline" id="CUA_key_bindings">5.2.1  CUA key bindings </span></h4>
<h5> <span class="mw-headline" id="File_operations">5.2.1.1  File operations </span></h5>
<table>
<tr>
<td> Ctrl-o
</td>
<td> Open file.
</td></tr>
<tr>
<td> Ctrl-s
</td>
<td> Save the current file.
</td></tr>
<tr>
<td> Ctrl-q
</td>
<td> Quit the editor.
</td></tr></table>
<h5> <span class="mw-headline" id="Cursor.2Fselection_movement">5.2.1.2  Cursor/selection movement </span></h5>
<table>
<tr>
<td> &#8594;
</td>
<td> Move cursor forward one character.
</td></tr>
<tr>
<td> &#8592;
</td>
<td> Move cursor back one character.
</td></tr>
<tr>
<td> &#8595;
</td>
<td> Move cursor down one line.
</td></tr>
<tr>
<td> &#8593;
</td>
<td> Move cursor down one line.
</td></tr>
<tr>
<td> Shift+&#8594;
</td>
<td> Extend selection forward one character.
</td></tr>
<tr>
<td> Shift+&#8592;
</td>
<td> Extend selection back one character.
</td></tr>
<tr>
<td> Shift+&#8595;
</td>
<td> Extend selection down one line.
</td></tr>
<tr>
<td> Shift+&#8593;
</td>
<td> Extend selection up one line.
</td></tr>
<tr>
<td> Ctrl-&#8594;
</td>
<td> Move cursor forward one word.
</td></tr>
<tr>
<td> Ctrl-&#8592;
</td>
<td> Move cursor back one word.
</td></tr>
<tr>
<td> Home
</td>
<td> Move cursor to beginning of line.
</td></tr>
<tr>
<td> End
</td>
<td> Move cursor to end of line.
</td></tr>
<tr>
<td> Ctrl-Home
</td>
<td> Move cursor to beginning of document.
</td></tr>
<tr>
<td> Ctrl-End
</td>
<td> Move cursor to end of document.
</td></tr></table>
<h5> <span class="mw-headline" id="Miscellaneous_operations">5.2.1.3  Miscellaneous operations </span></h5>
<table>
<tr>
<td> Ctrl-f
</td>
<td> Incremental search.
</td></tr>
<tr>
<td> Ctrl-x
</td>
<td> Cut the selected area and save it to the clipboard
</td></tr>
<tr>
<td> Ctrl-c
</td>
<td> Copy the selected area to the clipboard
</td></tr>
<tr>
<td> Ctrl-v
</td>
<td> Paste contents of clipboard at cursor.
</td></tr>
<tr>
<td> Ctrl-z
</td>
<td> Undo last operation.
</td></tr>
<tr>
<td> Ctrl-y
</td>
<td> Redo last operation.
</td></tr></table>
<h4> <span class="mw-headline" id="Vim_key_bindings">5.2.2  Vim key bindings </span></h4>
<h4> <span class="mw-headline" id="Emacs_key_bindings">5.2.3  Emacs key bindings </span></h4>
<p>C = Control
</p><p>M = Meta = Alt|Esc
</p>
<h5> <span class="mw-headline" id="Basics">5.2.3.1  Basics </span></h5>
<table>
<tr>
<td>C-x C-f
</td>
<td>"Find" file i.e. open/create a file in buffer
</td></tr>
<tr>
<td>C-x C-s
</td>
<td>Save the file
</td></tr>
<tr>
<td>C-x C-w
</td>
<td>Write the text to an alternate name
</td></tr>
<tr>
<td>C-x i
</td>
<td>Insert file at cursor position
</td></tr>
<tr>
<td>C-x b
</td>
<td>Create/switch buffers
</td></tr>
<tr>
<td>C-x C-b
</td>
<td>Show buffer list
</td></tr>
<tr>
<td>C-x k
</td>
<td>Kill buffer
</td></tr>
<tr>
<td>C-z
</td>
<td>Suspend Yi
</td></tr>
<tr>
<td>C-x C-c
</td>
<td>Close down Yi
</td></tr></table>
<h5> <span class="mw-headline" id="Basic_movement">5.2.3.2  Basic movement </span></h5>
<table>
<tr>
<td>C-f
</td>
<td>Forward char
</td></tr>
<tr>
<td>C-b
</td>
<td>Backward char
</td></tr>
<tr>
<td>C-p
</td>
<td>Previous line
</td></tr>
<tr>
<td>C-n
</td>
<td>Next line
</td></tr>
<tr>
<td>M-f
</td>
<td>Forward one word
</td></tr>
<tr>
<td>M-b
</td>
<td>Backward one word
</td></tr>
<tr>
<td>C-a
</td>
<td>Beginning of line
</td></tr>
<tr>
<td>C-e
</td>
<td>End of line
</td></tr>
<tr>
<td>C-v
</td>
<td>One page up
</td></tr>
<tr>
<td>M-v
</td>
<td>Scroll down one page
</td></tr>
<tr>
<td>M-&lt;
</td>
<td>Beginning of text
</td></tr>
<tr>
<td>M-&gt;
</td>
<td>End of text
</td></tr></table>
<h5> <span class="mw-headline" id="Editing">5.2.3.3  Editing </span></h5>
<table>
<tr>
<td>M-n
</td>
<td>Repeat the following command n times
</td></tr>
<tr>
<td>C-u
</td>
<td>Repeat the following command 4 times
</td></tr>
<tr>
<td>C-d
</td>
<td>Delete a char
</td></tr>
<tr>
<td>M-d
</td>
<td>Delete word
</td></tr>
<tr>
<td>M-Del
</td>
<td>Delete word backwards
</td></tr>
<tr>
<td>C-k
</td>
<td>Kill line
</td></tr>
<tr>
<td>C-Space
</td>
<td>Set beginning mark (for region marking for example)
</td></tr>
<tr>
<td>C-W
</td>
<td>"Kill" (delete) the marked region region
</td></tr>
<tr>
<td>M-W
</td>
<td>Copy the marked region
</td></tr>
<tr>
<td>C-y
</td>
<td>"Yank" (paste) the copied/killed region/line
</td></tr>
<tr>
<td>M-y
</td>
<td>Yank earlier text (cycle through kill buffer)
</td></tr>
<tr>
<td>C-x C-x
</td>
<td>Exchange cursor and mark
</td></tr>
<tr>
<td>C-t
</td>
<td>Transpose two chars
</td></tr>
<tr>
<td>M-t
</td>
<td>Transpose two words
</td></tr>
<tr>
<td>M-u
</td>
<td>Make letters uppercase in word from cursor position to end
</td></tr>
<tr>
<td>M-c
</td>
<td>Simply make first letter in word uppercase
</td></tr>
<tr>
<td>M-l
</td>
<td>Opposite to M-u
</td></tr></table>
<h5> <span class="mw-headline" id="Important">5.2.3.4  Important </span></h5>
<table>
<tr>
<td>C-g
</td>
<td>Quit the running/entered command
</td></tr>
<tr>
<td>C-x u
</td>
<td>Undo previous action
</td></tr>
<tr>
<td>M-/
</td>
<td>Undo previous action
</td></tr></table>
<h5> <span class="mw-headline" id="Search.2FReplace">5.2.3.5  Search/Replace </span></h5>
<table>
<tr>
<td>C-s
</td>
<td>Search forward
</td></tr>
<tr>
<td>C-r
</td>
<td>Search backward
</td></tr>
<tr>
<td>M-%
</td>
<td>Query replace
</td></tr>
<tr>
<td>Space or y
</td>
<td>Replace this occurrence
</td></tr>
<tr>
<td>Del or n
</td>
<td>Don't replace
</td></tr>
<tr>
<td>!
</td>
<td>Replace all following occurrences
</td></tr>
<tr>
<td>ENTER or q
</td>
<td>Quit replace
</td></tr></table>
<h5> <span class="mw-headline" id="Window-Commands">5.2.3.6  Window-Commands </span></h5>
<table>
<tr>
<td>C-x 2
</td>
<td>Split window vertically
</td></tr>
<tr>
<td>C-x o
</td>
<td>Change to other window
</td></tr>
<tr>
<td>C-x 0
</td>
<td>Delete window
</td></tr>
<tr>
<td>C-x 1
</td>
<td>Close all windows except the one the cursors in
</td></tr></table>
<h5> <span class="mw-headline" id="DIRectory_EDitor_.28dired.29">5.2.3.7  DIRectory EDitor (dired) </span></h5>
<table>
<tr>
<td>C-x d
</td>
<td>Start up dired
</td></tr>
<tr>
<td>C (large C)
</td>
<td>Copy
</td></tr>
<tr>
<td>d
</td>
<td>Mark for erase
</td></tr>
<tr>
<td>D
</td>
<td>Delete right away
</td></tr>
<tr>
<td>e or f
</td>
<td>Open file or directory
</td></tr>
<tr>
<td>g
</td>
<td>Re-read directory structure from file
</td></tr>
<tr>
<td>m
</td>
<td>Mark with *
</td></tr>
<tr>
<td>n
</td>
<td>Move to next line
</td></tr>
<tr>
<td>q
</td>
<td>Quit dired
</td></tr>
<tr>
<td>R
</td>
<td>Rename file
</td></tr>
<tr>
<td>u
</td>
<td>Remove mark
</td></tr>
<tr>
<td>x
</td>
<td>Delete files marked with D
</td></tr>
<tr>
<td> +
</td>
<td>Create directory
</td></tr></table>
<h5> <span class="mw-headline" id="Programming">5.2.3.8  Programming </span></h5>
<table>
<tr>
<td>M-m
</td>
<td>Move to first (non-space) char in this line
</td></tr>
<tr>
<td>M-^
</td>
<td>Attach this line to previous
</td></tr>
<tr>
<td>M-;
</td>
<td>Formatize and indent comment
</td></tr>

<h5> <span class="mw-headline" id="C.2C_C.2B.2B_and_Java_Modes">5.2.3.9  C, C++ and Java Modes </span></h5>
<table>
<tr>
<td>M-a
</td>
<td>Beginning of statement
</td></tr>
<tr>
<td>M-e
</td>
<td>End of statement
</td></tr>
<tr>
<td>C-c C-c
</td>
<td>Comment out marked area
</td></tr></table>
<h3> <span class="mw-headline" id="Development">5.3  Development </span></h3>
<ul><li>How do I install Yi for development?
</li></ul>
<dl><dd>Fork the repository on GitHub, then clone your version to your machine. Push to your repo on GitHub, and then make merge requests.
</dd></dl>
<ul><li>What are some of the dependancies?
</li></ul>
<dl><dd>There is a rather long list of dependencies for Yi, check the yi.cabal file for a list.
</dd></dl>
<dl><dd><dl><dd>If you are on Mac OS X and are using MacPorts, then these will not be included in the GHC in that distribution. Many of the dependancies are in MacPorts (for example: ghc, ghc-devel, alex, and gtk2hs). However, you may have some trouble building with Cabal-1.5.2, since it is a development version of Cabal. To work around these issues, you might have to add the line "Build-Type: Simple" to the .cabal files in the above required packages.
</dd></dl>
</dd></dl>
<h3> <span class="mw-headline" id="Configuration">5.4  Configuration </span></h3>
<h4> <span class="mw-headline" id="How_to_Configure_Yi">5.4.1  How to Configure Yi </span></h4>
<p>You can find some user configs at <a rel="nofollow" class="external free" href="https://github.com/yi-editor/yi/tree/master/yi-contrib/src/Yi/Config/Users">https://github.com/yi-editor/yi/tree/master/yi-contrib/src/Yi/Config/Users</a>
</p><p>A good way to start is to copy yi.hs in your $XDG_CONFIG_HOME/yi directory (create it if needed), and hack as needed.
</p>
<h3> <span class="mw-headline" id="Usage">5.5  Usage </span></h3>
<h4> <span class="mw-headline" id="GError_on_startup">5.5.1  GError on startup </span></h4>
<p>I get the error message "yi.exe: &lt;&lt;System.Glib.GError.GError&gt;&gt;" when I try to run yi.
</p><p>Sometimes this is a result of yi not being able to find the contents of the art directory when trying to start in graphical mode (e.g. Gtk or Pango). Check that the install has be done correctly or use the VTY mode (<tt>$ yi -f vty</tt>).
</p><p>For more detail on the error, modify main in Yi/Main.hs to catch GError:
</p>
<pre>
 Right finalCfg -&gt; do catchGError (do
                                   when (debugMode finalCfg) $ initDebug &quot;.yi.dbg&quot; 
                                   startEditor finalCfg state) (\(GError dom code msg) -&gt; fail msg)
</pre>
<p>Note that more recent versions of Yi (e.g. from the GitHub repo) no longer simply display the anonymous GError but instead provide a more detailed error message (making the above code snippet unnecessary).
</p>
<h2> <span class="mw-headline" id="Contribute">6  Contribute </span></h2>
<p>Fork the source on GitHub and send pull requests for merges.  Or consult the yi-devel mailing list. Patches are always welcome.&#160;:)
</p><p>Otherwise, see <a rel="nofollow" class="external text" href="https://github.com/yi-editor/yi/issues">the complete list of open issues</a> here.
</p><p>(Note you can start working on all issues in
New/Accepted state, regardless of the owner of the issue.
-- you can send an email to the list with your plan if unsure)
</p><p>Post your questions and follow up on <a rel="nofollow" class="external text" href="http://groups.google.com/group/yi-devel">the yi-devel mailing list</a>.
Some other pending tasks are described below.
</p>
<h3> <span class="mw-headline" id="Write_access_policy">6.1  Write access policy </span></h3>
<p>One does not need write access to the repository to contribute. Please fork the main repository and send pull requests.
</p><p>Write access can however be granted, with the following disclaimer:
</p>
<ul><li> All people with write access can apply patches without prior approval. If one thinks a patch would be controversial, it might be a good idea to discuss it on the list though.
</li><li> Try to not break the build. (By Murphy's law, if you do so it will happen at the most annoying moment...) So, always try to build before pushing patches. Bypassing the test build to record a patch indicates you should further improve your patch.
</li><li> <a href="/haskellwiki/index.php?title=JeanPhilippeBernardy&amp;action=edit&amp;redlink=1" class="new" title="JeanPhilippeBernardy (page does not exist)"> I</a> can at any time rollback a patch for whatever reason. This however should not upset the author of the patch. Most contributions are welcome, so a patch revert normally would only mean that a detail or two need to be worked out. (e.g. it breaks an important feature in some configuration, etc.)
</li></ul>
<h2> <span class="mw-headline" id="Yi_Ideas">7  Yi Ideas </span></h2>
<p>This section is meant to gather ideas people have for Yi.
</p>
<ul><li>Evolution to an IDE:
</li></ul>
<dl><dd>Show  exact location of compilation errors: 80% of a Haskell project
</dd><dd>Support for the GHCi debugger &amp; others: 10&#160;% of a Haskell project (Added bonus: great for learning: through the debugger, people learn the real execution flow of a Haskell program. Better if this is done inside an editor)
</dd><dd>Integration of refactoring tools&#160;: 5%
</dd><dd>Edition: only 5%
</dd></dl>
<p><br />
</p>
<ul><li>An extension to GHCi to support documentation of symbols.
</li></ul>
<dl><dd>This seems to be (reasonably) straightforward, as GHCi already has&#160;:info.  It would mean hacking the type environment (what about values?) to add documentation information.  The main problem would seem to be populating this --- maybe hack haddock to produce something from the library docs?  I assume that using package GHC uses the parent RTS (package GHC seems to be the way to go, but more investigation is required --- don?)
</dd></dl>
<ul><li>Views on data
</li></ul>
<dl><dd>Rather than just editing a file, you would open a view onto the file, i.e. there is no longer a 1-1 correspondence between buffers and files.  Why?  Well, for aggregate buffers (i.e., editing multiple files in the one view), or for multiple views of a file (e.g. AST and source-level).  There would be some primitive ops for editing a buffer (insertChar, delete, etc.), which would then call update functions on anything observing that file.
</dd></dl>
<ul><li>Support for Perl style regular expressions
</li></ul>
<dl><dd>Emacs regexes don't support the same set of features; Perl regexes are more tersely powerful. This could be a good feature for luring users from vanilla Emacs.
</dd></dl>
<ul><li>Remote attach so I can work from home, but still use a remote machine
</li></ul>
<dl><dd>Like Emacs's server?
</dd></dl>
<ul><li>Haddock documentation
</li></ul>
<dl><dd>(no brainer), maybe associate with .hi files for binaries.
</dd></dl>
<ul><li>Maybe a class <code>YiShow</code>, which all config items must be a member of?  This is to emulate describe-variable
</li></ul>
<ul><li>Support for collaborative editing. This would be very good for #haskell work, and the text editor Gobby and its <a rel="nofollow" class="external text" href="http://gobby.0x539.de/trac/wiki/ObbyProtocol">Obby protocol</a> seem to provide a candidate way of doing things.
</li></ul>
<p><br />
</p>
<h3> <span class="mw-headline" id="Borrowing_from_other_editors">7.1  Borrowing from other editors </span></h3>
<p>Take some ideas from Emacs, some from vi, but don't stick them all together without a single core philosophy. Otherwise, you'll end up with an editor that looks like it was thrown together. Some people come from an Emacs background, some from vi, some from elsewhere, and ALL of them will want Yi to behave like their regular editor. The best way to do this is to have a single person make all the decisions on behavior.
</p>
<h4> <span class="mw-headline" id="Emacs">7.1.1  Emacs </span></h4>
<p>Coming from an Emacs background, I think a few things are essential,
mainly the introspection capabilities of Emacs.
</p>
<h5> <span class="mw-headline" id="Emacs_goodness">7.1.1.1  Emacs goodness </span></h5>
<p>The following are things I like about Emacs, as an extensible
environment, and miss in Yi:
</p>
<dl><dt> Really good online documentation
</dt><dd> Emacs can tell you a lot about a function or variable with a keypress--- the current value, where it is declared, and a hypertext formation string
</dd></dl>
<dl><dt> Hooks-Extensibility
</dt><dd> All (good) apps allow users to extend, through, e.g., hooks --- a list of functions that are run before/after some event (like saving a file)
</dd></dl>
<dl><dt> List of must-have features
</dt><dd> <a rel="nofollow" class="external free" href="http://glyph.twistedmatrix.com/2008/12/emacs-test.html">http://glyph.twistedmatrix.com/2008/12/emacs-test.html</a>
</dd></dl>
<p><br />
</p>
<h5> <span class="mw-headline" id="Emacs_badness">7.1.1.2  Emacs badness </span></h5>
<p>So, why replace it?:
</p>
<dl><dt> ELisp
</dt><dd> Dynamically scoped, Dynamically typed, ugly, old.  'Nuff said
</dd></dl>
<dl><dt> What's a Parser?
</dt><dd> A lot of apps in emacs do stuff with text, usually text that is in some language.  There is no standard parser (like, e.g. parsec), so a lot of it is ugly handwritten spaghetti.  This also means that adding analysis tools isn't really done (or done nicely).
</dd></dl>
<dl><dt> ELisp again
</dt><dd> Haskell is a lot cleaner to write, especially because of the large number of libraries.
</dd></dl>
<p>(See also <a rel="nofollow" class="external text" href="http://www.emacswiki.org/cgi-bin/wiki/WhyDoesElispSuck">WhyDoesElispSuck</a> on the Emacs wiki.)
</p>
<h5> <span class="mw-headline" id="Emacs_maybeness_.28.3F.29">7.1.1.3  Emacs maybeness (?) </span></h5>
<p>Some things that are sometimes bad, sometimes good:
</p>
<dl><dt> Everything is a buffer
</dt><dd> Makes some sense, but sometimes doesn't.  It is nice to have uniform key bindings do the right thing (e.g., C-Space sets the mark, and the region can then be used, e.g. to delete a sequence of emails in Wl) Sometimes, however, you just want some sort of GUI widget.
</dd><dd> OTOH, having the minibuffer be a special kind of buffer is a good idea.
</dd></dl>
<dl><dt> Properties
</dt><dd> It is possible to associate arbitrary properties with symbols.  This means you can annotate a symbol and then use that information at a later date
</dd></dl>
<h4> <span class="mw-headline" id="Vim.3F">7.1.2  Vim? </span></h4>
<dl><dt> good things
</dt><dd> modal key editing -&gt; configuration system is powerful enough!
</dd><dd> light weight -&gt; fast startup -&gt; yi has this&#160;:)
</dd></dl>
<p><br />
</p>
<h3> <span class="mw-headline" id="Ideas">7.2  Ideas </span></h3>
<h3> <span class="mw-headline" id="Implementation">7.3  Implementation </span></h3>
<p>Considerations:
</p>
<dl><dt> Interface to the runtime
</dt><dd> The scheduler, docs, etc.
</dd></dl>
<dl><dt> Introspection of e.g. what processes are running.
</dt><dd> There are already libraries in Haskell for processes, but they don't give Yi any extra information --- we really want a layer on top.
</dd></dl>
<p>...
</p>
<h2> <span class="mw-headline" id="Trivia">8  Trivia </span></h2>
<dl><dt>Y I is the most recursive acronym. (Read it as combinators).
</dt><dt>義, pronounced yi, means righteousness, one of the five virtues of confucianism.
</dt><dt>Yi is the symbol for a yobi - the largest <a rel="nofollow" class="external text" href="http://en.wikipedia.org/wiki/Binary_prefix#Prefixes">binary prefix</a>, meaning 2^80
</dt></dl>
<h2> <span class="mw-headline" id="External_links">9  External links </span></h2>
<ul><li> Blog: <a rel="nofollow" class="external free" href="http://yi-editor.blogspot.com/">http://yi-editor.blogspot.com/</a>
</li><li> Haddock: <a rel="nofollow" class="external free" href="http://projects.haskell.org/yi/doc/">http://projects.haskell.org/yi/doc/</a>
</li><li> Repository: <a rel="nofollow" class="external free" href="https://github.com/yi-editor/yi">https://github.com/yi-editor/yi</a>
</li><li> Issues tracker: <a rel="nofollow" class="external free" href="https://github.com/yi-editor/yi/issues">https://github.com/yi-editor/yi/issues</a>
</li><li> Hackage page: <a rel="nofollow" class="external free" href="http://hackage.haskell.org/package/yi">http://hackage.haskell.org/package/yi</a>
</li><li> IRC channel: #yi on Freenode
</li></ul>
</table>

<!-- 
NewPP limit report
Preprocessor node count: 124/1000000
Post‐expand include size: 9558/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1797-0!*!0!1!en!2!* and timestamp 20140917054656 -->
</div><div class="printfooter">
Retrieved from "<a href="http://www.haskell.org/haskellwiki/index.php?title=Yi&amp;oldid=58356">http://www.haskell.org/haskellwiki/index.php?title=Yi&amp;oldid=58356</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/haskellwiki/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="/haskellwiki/Category:Applications" title="Category:Applications">Applications</a></li><li><a href="/haskellwiki/Category:FAQ" title="Category:FAQ">FAQ</a></li></ul></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div></div>
		<div id="column-one">
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage"><a href="/haskellwiki/Haskell">Haskell</a></li>
				<li id="n-portal"><a href="/haskellwiki/HaskellWiki:Community">Wiki community</a></li>
				<li id="n-recentchanges"><a href="/haskellwiki/Special:RecentChanges">Recent changes</a></li>
				<li id="n-randompage"><a href="/haskellwiki/Special:Random">Random page</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/haskellwiki/Special:WhatLinksHere/Yi">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/haskellwiki/Special:RecentChangesLinked/Yi">Related changes</a></li>
<li id="t-specialpages"><a href="/haskellwiki/Special:SpecialPages">Special pages</a></li>
				<li id="t-print"><a href="/haskellwiki/index.php?title=Yi&amp;printable=yes" rel="alternate">Printable version</a></li>				<li id="t-permalink"><a href="/haskellwiki/index.php?title=Yi&amp;oldid=58356">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="//www.mediawiki.org/"><img src="/wikistatic/skins//common/images/poweredby_mediawiki_88x31.png" height="31" width="88" alt="Powered by MediaWiki" /></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 23 June 2014, at 01:20.</li>
					<li id="viewcount">This page has been accessed 284,788 times.</li>
					<li id="copyright">Recent content is available under <a href="/haskellwiki/HaskellWiki:Copyrights" title="HaskellWiki:Copyrights">a simple permissive license</a>.</li>
					<li id="privacy"><a href="/haskellwiki/HaskellWiki:Privacy_policy" title="HaskellWiki:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/haskellwiki/HaskellWiki:About" title="HaskellWiki:About">About HaskellWiki</a></li>
					<li id="disclaimer"><a href="/haskellwiki/HaskellWiki:General_disclaimer" title="HaskellWiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.page.ready"], null, true);
}</script>
<script src="http://www.haskell.org/haskellwiki/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=hawiki&amp;*"></script>
<!-- Served in 0.838 secs. --><script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-15375175-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body></html>
